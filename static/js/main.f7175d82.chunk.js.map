{"version":3,"sources":["components/App.js","actions/index.js","types.js","reducers/index.js","index.js","components/logo.png"],"names":["App","state","text","date","Date","render_Reminders","reminders","_this","props","react_default","a","createElement","className","map","reminder","key","id","moment","fromNow","onClick","remove_Reminder","_this2","this","console","log","src","logo","type","value","placeholder","onChange","e","setState","target","react_datepicker_min_default","selected","placeholderText","showTimeSelect","timeFormat","timeCaption","dateFormat","add_Reminder","clear_Reminder","Component","connect","action","arguments","length","undefined","read_cookie","concat","Object","toConsumableArray","Math","random","bake_cookie","filter","store","createStore","ReactDOM","render","es","components_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f7175d82.chunk.js","sourcesContent":["import React , {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {add_Reminder , remove_Reminder ,clear_Reminder}  from '../actions'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport logo from './logo.png'\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n    state = {\r\n        text: '' ,\r\n        date:new Date()\r\n    }\r\n\r\n    render_Reminders = () =>{\r\n        const {reminders} = this.props ;\r\n        return(\r\n            <ul className=\"list-group\">\r\n        { reminders.map(reminder => {\r\n            return (\r\n                <li key={reminder.id} className=\"list-group-item\">\r\n                    <div>{reminder.text}</div>\r\n                    <div>{moment(new Date(reminder.date)).fromNow()}</div>\r\n                    <div className=\"btn btn-danger closeIcon\"  onClick={() => this.props.remove_Reminder(reminder.id)}>X</div>\r\n                </li>\r\n            )\r\n        })}\r\n            </ul>\r\n        )\r\n        \r\n    }\r\n    render(){\r\n        console.log(this.props);\r\n        return(\r\n           <div className=\"App\">\r\n                <img src={logo}/>\r\n                <div className=\"reminder-title\">\r\n                    <h2>What Shoud ou Do</h2>\r\n\r\n                </div>\r\n                <input \r\n                className=\"form-control\"\r\n                type='text'\r\n                value={this.state.text}\r\n                placeholder=\"Enter What ou Think...?\"\r\n                onChange={(e) => this.setState({text : e.target.value})}\r\n                />\r\n                \r\n                <DatePicker\r\n                    className=\"form-control \"\r\n                    value={this.state.date}\r\n                    selected={this.state.date}\r\n                    placeholderText=\"\"\r\n                    onChange={(date) => {this.setState({date : date})}}\r\n                    showTimeSelect\r\n                    timeFormat=\"HH:mm\"\r\n                    timeCaption=\"time\"\r\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                />\r\n\r\n                <button \r\n                onClick = {() => {\r\n                    this.props.add_Reminder(this.state.text,this.state.date)\r\n                    this.setState({text : \"\", date : new Date()})\r\n                }\r\n                }\r\n                className=\"btn btn-primary\"\r\n                >\r\n                Add Reminder\r\n                </button>\r\n                {this.render_Reminders()}\r\n                <button \r\n                className=\"btn btn-danger\" onClick={() => this.props.clear_Reminder()}>\r\n                Clear Reminders\r\n                </button>\r\n\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// function mapDispatchToProps(dispatch){\r\n//     return {\r\n//         add_Reminder : () => dispatch(add_Reminder())\r\n//     }\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n//     return{\r\n//         reminders : state\r\n//     }\r\n// }\r\nexport default connect( state =>{return{reminders : state}}, {add_Reminder , remove_Reminder , clear_Reminder} )(App)\r\n","import {ADD_REMINDER, REMOVE_REMINDER ,CLEAR_REMINDERS} from \"../types\"\r\n\r\nexport const add_Reminder = (text , date) =>{\r\n    const action = {\r\n        type: ADD_REMINDER,\r\n        text,\r\n        date\r\n    }\r\n    console.log(\"add\", action);\r\n    return action\r\n    \r\n}\r\n\r\n\r\nexport const remove_Reminder = (id) =>{\r\n    const action = {\r\n        type: REMOVE_REMINDER,\r\n        id\r\n       \r\n    }\r\n    console.log(\"remove\", action);\r\n    return action\r\n    \r\n}\r\n\r\nexport const clear_Reminder = () =>{\r\n    const action = {\r\n        type : CLEAR_REMINDERS ,\r\n    }\r\n    return action\r\n}","export const ADD_REMINDER = 'ADD_REMINDER'\r\nexport const REMOVE_REMINDER = 'REMOVE_REMINDER'\r\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS'\r\n","import {ADD_REMINDER, CLEAR_REMINDERS, REMOVE_REMINDER} from \"../types\"\r\nimport { bake_cookie, read_cookie  } from 'sfcookies'\r\n\r\n\r\n\r\nconst reminders = (state = [] , action) => {\r\n    let reminders =null;\r\n\r\n    state = read_cookie(\"reminders\")\r\n    if(action.type === ADD_REMINDER){\r\n        reminders = [...state , {text:action.text , date:action.date , id:Math.random()}]\r\n        bake_cookie(\"reminders\",reminders)\r\n\r\n        console.log(\"fro reducer\",reminders);\r\n        return reminders\r\n    }else if(action.type === REMOVE_REMINDER){\r\n        reminders = state.filter((reminder) => reminder.id !== action.id )\r\n        bake_cookie(\"reminders\",reminders)\r\n\r\n\r\n        return reminders\r\n    } else if (action.type === CLEAR_REMINDERS){\r\n        reminders = []\r\n        bake_cookie(\"reminders\",reminders)\r\n\r\n        return reminders\r\n    }\r\n    else{\r\n        return state\r\n    }\r\n}\r\n\r\nexport default reminders","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\"\r\nimport{ createStore} from \"redux\"\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport reminders from \"./reducers\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport './index.css'\r\n\r\n\r\nconst store = createStore(reminders)\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)","module.exports = __webpack_public_path__ + \"static/media/logo.de7022b3.png\";"],"sourceRoot":""}